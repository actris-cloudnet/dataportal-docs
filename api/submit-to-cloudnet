#!/bin/bash

usage="Example script for submitting raw data to cloudnet data portal.
!!!Edit data paths and passwords below according to your sites, instruments and file structure.!!!

$(basename "$0") [-h] [-d YYYYMMDD] SITE

where:
    -h   show help and exit
    -d   date in format YYYYYMMDD (default is the current day)
    SITE site name

examples:
    ./submit-to-cloudnet warsaw
    ./submit-to-cloudnet -d 20211020 kumpula
    "

yyyymmdd=$(date --utc "+%Y%m%d" -d "today")  # Default date. Use "today-1" for yesterday, etc.

while getopts ':hd:' option; do
  case "$option" in
    h) echo "$usage"
       exit
       ;;
    d) yyyymmdd=$OPTARG
       ;;
    :) printf "missing argument for -%s\n" "$OPTARG" >&2
       echo "$usage" >&2
       exit 1
       ;;
   \?) printf "illegal option: -%s\n" "$OPTARG" >&2
       echo "$usage" >&2
       exit 1
       ;;
  esac
done
shift $((OPTIND - 1))
site=$1
if ! [[ "$yyyymmdd" =~ ^[0-9]{4}[0-9]{2}[0-9]{2}$ ]] || ! date -d "$yyyymmdd" >/dev/null 2>&1; then
  echo "Invalid date: ${yyyymmdd}"
  exit 2
fi

yyyy=$(echo "$yyyymmdd" | cut -c1-4)
mm=$(echo "$yyyymmdd" | cut -c5-6)
dd=$(echo "$yyyymmdd" | cut -c7-8)
yyyymm=$yyyy$mm
ymmdd=$(echo "$yyyymmdd" | cut -c4-8)
yymm=$(echo "$yyyymmdd" | cut -c3-6)
declare -A files
case $site in
  # -------------------------------------------
  # !!! SITE CONFIG - EDIT ME !!!
  # Supported instruments: https://docs.cloudnet.fmi.fi/api/upload-file-types.html
  # NOTE: Use different password for each site!
  # -------------------------------------------
  bucharest)
    password="bucharest-password"
    files['chm15k']="/my/cl51/data/root/path/${yyyymm}/${dd}/*.nc"
    files['rpg-fmcw-94']="/my/rpg-fmcw-94/data/root/path/${ymmdd}/.LV?"
    files['mira']="/my/mira/data/root/path/${yyyy}/${mm}/${dd}/*.mmclx"
    files['hatpro']="/my/hatpro/data/root/path/${yymm}/*${dd}*.LWP"
    ;;

  stationtest)
    password="stationtest-password"
    files['cl61d']="/my/test/data/*${yyyymmdd}*.nc"
    ;;
  # -----------
  # END OF EDIT
  # -----------
  *)
    echo "Config for site ${site} not defined"
esac

function upload2cloudnet {
  full_path=$1
  instrument=$2
  filename=$(basename "$full_path")
  hash=$(md5sum "$full_path" | cut -f 1 -d " ")
  json=$(cat << EOF
  {
    "measurementDate": "${yyyy}-${mm}-${dd}",
    "instrument": "$instrument",
    "filename": "$filename",
    "checksum": "$hash"
  }
EOF
)
  echo "Uploading ${filename}"
  md_response=$(curl -s -i -u "$site":"$password" -H "Content-Type: application/json" \
  -d "$json" https://cloudnet.fmi.fi/upload/metadata/)

  status_code=$(echo "$md_response" | head -1 | cut -d' ' -f2)
  if test "$status_code" -ne 200 ; then
    response_body=$(echo "$md_response" | tail -1)
    echo "$response_body"
  else
    data_response=$(curl -s -u "$site":"$password" -H "Transfer-Encoding: chunked" \
    --upload-file "$full_path" https://cloudnet.fmi.fi/upload/data/"$hash")
    echo "$data_response"
  fi
}

for instrument in "${!files[@]}"; do
  dir=${files[$instrument]}
  filenames=$(ls -- $dir)
    for filename in $filenames; do
      if [ -f "${filename}" ]; then
          upload2cloudnet "$filename" "$instrument"
      fi
    done
done
